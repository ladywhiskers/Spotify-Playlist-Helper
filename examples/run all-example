function myFunction() {
  updateAllPlaylists();
}

/**
 * Updates all playlists defined in the script, regardless of time or schedule.
 * This function iterates through a list of playlist update functions and executes them sequentially.
 * It handles potential errors during the update process and logs the results.
 *
 * @returns {Promise<boolean>} True if all playlist updates were attempted, false otherwise.
 */
async function updateAllPlaylists() {
  console.log("Starting updateAllPlaylists");
  try {
    const playlistUpdateFunctions = [
      updateHeardLikedandForgotten_,
      songsToLike_,
      updateDiscoverDaily_,
      updateFocusedWork_,
      updatePoolOfMemory,
      updateArchives,
      updateHottest100Shortlist,
      updateChill,
      updateDanceable,
      updateHighEnergy,
      updateHappyMix,
      updateMoodyMix,
      updateRomanticMix,
      updateSadMix,
    ];

    const results = await Promise.allSettled(
      playlistUpdateFunctions.map((fn) => fn())
    );

    results.forEach((result, index) => {
      if (result.status === "fulfilled") {
        console.log(
          `Successfully updated: ${playlistUpdateFunctions[index].name}`
        );
      } else {
        console.error(
          `Failed to update: ${playlistUpdateFunctions[index].name}`,
          result.reason
        );
      }
    });

    console.log("Finished updateAllPlaylists");
    return true;
  } catch (error) {
    console.error("Error in updateAllPlaylists:", error);
    return false;
  }
}
